{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyDGkkY2V-jx2TyICEz4DGdeWWoSHDwZCZM\",\n  authDomain: \"crown-clothes-e3884.firebaseapp.com\",\n  databaseURL: \"https://crown-clothes-e3884.firebaseio.com\",\n  projectId: \"crown-clothes-e3884\",\n  storageBucket: \"crown-clothes-e3884.appspot.com\",\n  messagingSenderId: \"907940446606\",\n  appId: \"1:907940446606:web:1871c319367990e39064df\",\n  measurementId: \"G-X11CXH1RXJ\"\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const createUserProfileDocument = async (userAuth, additionData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionData\n      });\n    } catch (error) {\n      console.log(\"error creatind a user\", error.message);\n    }\n  }\n\n  return userRef;\n};\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider); // code to add data into our application\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    // create new document with random unique id\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  }); // to execute the batch\n\n  return await batch.commit();\n};\nexport const convertCollectionSnapShotToMap = collections => {\n  console.log(collections);\n};\nexport default firebase;","map":{"version":3,"sources":["E:/files/React_works/Crown-clothes/clothes/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","createUserProfileDocument","userAuth","additionData","userRef","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionSnapShotToMap","collections"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAGA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,qCAFD;AAGXC,EAAAA,WAAW,EAAE,4CAHF;AAIXC,EAAAA,SAAS,EAAE,qBAJA;AAKXC,EAAAA,aAAa,EAAE,iCALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB;AAEA,OAAO,MAAMU,IAAI,GAAGX,QAAQ,CAACW,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGZ,QAAQ,CAACY,SAAT,EAAlB;AACP,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,YAAjB,KAAiC;AACxE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGJ,SAAS,CAACK,GAAV,CAAe,SAAQH,QAAQ,CAACI,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AACA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAClB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBT,QAA7B;AACA,UAAMU,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAG;AACD,YAAMT,OAAO,CAACU,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGT;AAJa,OAAZ,CAAN;AAMD,KAPD,CAQA,OAAOY,KAAP,EAAa;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAoCF,KAAK,CAACG,OAA1C;AACD;AACF;;AAED,SAAOd,OAAP;AACD,CAvBM;AAyBP,MAAMe,QAAQ,GAAG,IAAI/B,QAAQ,CAACW,IAAT,CAAcqB,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAMxB,IAAI,CAACyB,eAAL,CAAqBL,QAArB,CAA/B,C,CAEP;;AAEA,OAAO,MAAMM,yBAAyB,GAAG,OAAOC,aAAP,EAAsBC,YAAtB,KAAuC;AAC9E,QAAMC,aAAa,GAAG5B,SAAS,CAAC6B,UAAV,CAAqBH,aAArB,CAAtB;AACA,QAAMI,KAAK,GAAG9B,SAAS,CAAC8B,KAAV,EAAd;AAEAH,EAAAA,YAAY,CAACI,OAAb,CAAqBC,GAAG,IAAI;AAC1B;AACA,UAAMC,SAAS,GAAGL,aAAa,CAACvB,GAAd,EAAlB;AACAyB,IAAAA,KAAK,CAAChB,GAAN,CAAUmB,SAAV,EAAoBD,GAApB;AACD,GAJD,EAJ8E,CAU9E;;AAEA,SAAO,MAAMF,KAAK,CAACI,MAAN,EAAb;AACD,CAbM;AAeP,OAAO,MAAMC,8BAA8B,GAAIC,WAAD,IAAiB;AAC7DpB,EAAAA,OAAO,CAACC,GAAR,CAAYmB,WAAZ;AACD,CAFM;AAIP,eAAehD,QAAf","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDGkkY2V-jx2TyICEz4DGdeWWoSHDwZCZM\",\r\n    authDomain: \"crown-clothes-e3884.firebaseapp.com\",\r\n    databaseURL: \"https://crown-clothes-e3884.firebaseio.com\",\r\n    projectId: \"crown-clothes-e3884\",\r\n    storageBucket: \"crown-clothes-e3884.appspot.com\",\r\n    messagingSenderId: \"907940446606\",\r\n    appId: \"1:907940446606:web:1871c319367990e39064df\",\r\n    measurementId: \"G-X11CXH1RXJ\"\r\n  };\r\n\r\nfirebase.initializeApp(config)\r\n\r\nexport const auth = firebase.auth()\r\nexport const firestore = firebase.firestore()\r\nexport const createUserProfileDocument = async (userAuth, additionData) =>{\r\n  if(!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  const snapShot = await userRef.get()\r\n  if(!snapShot.exists){\r\n    const {displayName, email} = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try{\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionData\r\n      })\r\n    }\r\n    catch (error){\r\n      console.log(\"error creatind a user\",error.message);\r\n    }\r\n  }\r\n\r\n  return userRef;\r\n}\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\nprovider.setCustomParameters({prompt:'select_account'});\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\r\n\r\n// code to add data into our application\r\n\r\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\r\n  const collectionRef = firestore.collection(collectionKey);\r\n  const batch = firestore.batch();\r\n\r\n  objectsToAdd.forEach(obj => {\r\n    // create new document with random unique id\r\n    const newDocRef = collectionRef.doc(); \r\n    batch.set(newDocRef,obj)\r\n  })\r\n\r\n  // to execute the batch\r\n\r\n  return await batch.commit();\r\n}\r\n\r\nexport const convertCollectionSnapShotToMap = (collections) => {\r\n  console.log(collections);\r\n}\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}