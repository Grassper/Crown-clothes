{"ast":null,"code":"import { ShopActionTypes } from \"./shop.types\";\nimport { firestore, convertCollectionSnapShotToMap } from \"../../firebase/firebase.utils.js\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionsError = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(async snapshot => {\n      const collectionMap = convertCollectionSnapShotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionMap));\n    }).catch(error => dispatch(fetchCollectionsError(error.message)));\n  };\n};","map":{"version":3,"sources":["E:/files/React_works/Crown-clothes/clothes/src/redux/shop/shop.action.js"],"names":["ShopActionTypes","firestore","convertCollectionSnapShotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsError","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AACA,SAASC,SAAT,EAAmBC,8BAAnB,QAAyD,kCAAzD;AAGA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,aAAD,KAAoB;AACvDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADiC;AAEvDC,EAAAA,OAAO,EAAEF;AAF8C,CAApB,CAAhC;AAKP,OAAO,MAAMG,qBAAqB,GAAIC,YAAD,KAAmB;AACpDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAD8B;AAEpDH,EAAAA,OAAO,EAAEE;AAF2C,CAAnB,CAA9B;AAMP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,MAAMC,QAAN,IAAkB;AACvC,YAAMZ,aAAa,GAAGL,8BAA8B,CAACiB,QAAD,CAApD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,aAAD,CAAxB,CAAR;AACH,KAHD,EAICa,KAJD,CAIOC,KAAK,IAAIP,QAAQ,CAACJ,qBAAqB,CAACW,KAAK,CAACC,OAAP,CAAtB,CAJxB;AAKH,GATD;AAUH,CAXM","sourcesContent":["import { ShopActionTypes } from \"./shop.types\";\r\nimport { firestore,convertCollectionSnapShotToMap } from \"../../firebase/firebase.utils.js\";\r\n\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\r\n});\r\n\r\nexport const fetchCollectionsSuccess = (collectionMap) => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload: collectionMap\r\n});\r\n\r\nexport const fetchCollectionsError = (errorMessage) => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload: errorMessage\r\n})\r\n\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection(\"collections\");\r\n        dispatch(fetchCollectionsStart());\r\n\r\n        collectionRef.get().then(async snapshot => {\r\n            const collectionMap = convertCollectionSnapShotToMap(snapshot);\r\n            dispatch(fetchCollectionsSuccess(collectionMap));\r\n        })\r\n        .catch(error => dispatch(fetchCollectionsError(error.message)));\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}