{"ast":null,"code":"import { takeLatest, all, call, put } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { SignInFailure, SignInSuccess, signOutSuccess, signOutFailure, signUpSucces, signUpFailure, signUpSuccess } from \"./user.action\";\nimport { auth, createUserProfileDocument, googleProvider, getCurrentUser } from \"../../firebase/firebase.utils\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signUp({\n  displayName,\n  email,\n  password,\n  confirmpassword\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess());\n    yield getSnapshotFromUserAuth(user, {\n      displayName\n    });\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["E:/files/React_works/Crown-clothes/clothes/src/redux/user/user.sagas.js"],"names":["takeLatest","all","call","put","UserActionTypes","SignInFailure","SignInSuccess","signOutSuccess","signOutFailure","signUpSucces","signUpFailure","signUpSuccess","auth","createUserProfileDocument","googleProvider","getCurrentUser","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","isUserAuthenticated","signUp","displayName","email","password","confirmpassword","createUserWithEmailAndPassword","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest,all,call, put } from \"redux-saga/effects\";\r\n\r\nimport UserActionTypes from \"./user.types\";\r\nimport { SignInFailure,SignInSuccess,signOutSuccess,signOutFailure,signUpSucces,signUpFailure, signUpSuccess } from \"./user.action\";\r\n\r\nimport { auth,createUserProfileDocument,googleProvider,getCurrentUser } from \"../../firebase/firebase.utils\";\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth){\r\n    try{\r\n        const userRef = yield call(createUserProfileDocument, userAuth);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(\r\n            SignInSuccess({\r\n                id:userSnapshot.id,\r\n                ...userSnapshot.data()\r\n            })\r\n        );\r\n    }catch(error){\r\n        yield put(SignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle(){\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n    }catch(error){\r\n        yield put(SignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* isUserAuthenticated(){\r\n    try{\r\n        const userAuth = yield getCurrentUser();\r\n        if(!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth);\r\n    }\r\n    catch(error){\r\n        yield put(SignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signUp({displayName, email, password, confirmpassword}){\r\n    try {\r\n        const { user } = yield auth.createUserWithEmailAndPassword(email,password);\r\n        yield put(signUpSuccess());\r\n        yield getSnapshotFromUserAuth(user,{displayName});\r\n    }\r\n    catch(error){\r\n        yield put(signUpFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signOut(){\r\n    try{\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess());\r\n    }\r\n    catch (error){\r\n        yield put(signOutFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(\r\n        UserActionTypes.GOOGLE_SIGN_IN_START,\r\n        signInWithGoogle\r\n        );\r\n}\r\n\r\nexport function* signInWithEmail({payload:{ email,password }}){\r\n    try{\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n\r\n        yield getSnapshotFromUserAuth(user);\r\n    }catch(error){\r\n        yield put(SignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(\r\n        UserActionTypes.EMAIL_SIGN_IN_START,\r\n        signInWithEmail\r\n    );\r\n}\r\n\r\nexport function* onCheckUserSession(){\r\n    yield takeLatest(\r\n        UserActionTypes.CHECK_USER_SESSION,\r\n        isUserAuthenticated\r\n        );\r\n}\r\n\r\nexport function* onSignOutStart(){\r\n    yield takeLatest(\r\n        UserActionTypes.SIGN_OUT_START,\r\n        signOut\r\n    )\r\n}\r\n\r\nexport function* onSignUpStart(){\r\n    yield takeLatest(\r\n        UserActionTypes.SIGN_UP_START,\r\n        signUp\r\n    )\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([call(onGoogleSignInStart),\r\n               call(onEmailSignInStart),\r\n               call(onCheckUserSession),\r\n               call(onSignOutStart),\r\n            ]);\r\n}"]},"metadata":{},"sourceType":"module"}