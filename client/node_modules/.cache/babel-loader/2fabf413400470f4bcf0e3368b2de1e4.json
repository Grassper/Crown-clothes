{"ast":null,"code":"import { takeLatest, all, call, put } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { googleSignInSuccess, googleSignInFailure, emailSignInFailure, emailSignInSuccess } from \"./user.action\";\nimport { auth, createUserProfileDocument, googleProvider } from \"../../firebase/firebase.utils\";\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["E:/files/React_works/Crown-clothes/clothes/src/redux/user/user.sagas.js"],"names":["takeLatest","all","call","put","UserActionTypes","googleSignInSuccess","googleSignInFailure","emailSignInFailure","emailSignInSuccess","auth","createUserProfileDocument","googleProvider","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAoBC,GAApB,EAAwBC,IAAxB,EAA8BC,GAA9B,QAAyC,oBAAzC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,mBAAT,EAA6BC,mBAA7B,EAAiDC,kBAAjD,EAAoEC,kBAApE,QAA8F,eAA9F;AAEA,SAASC,IAAT,EAAcC,yBAAd,EAAwCC,cAAxC,QAA8D,+BAA9D;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACK,eAAL,CAAqBH,cAArB,CAAvB;AACA,UAAMI,OAAO,GAAG,MAAMb,IAAI,CAACQ,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CACLE,mBAAmB,CAAC;AAChBa,MAAAA,EAAE,EAACF,YAAY,CAACE,EADA;AAEhB,SAAGF,YAAY,CAACG,IAAb;AAFa,KAAD,CADd,CAAT;AAMH,GAVD,CAUC,OAAMC,KAAN,EAAY;AACT,UAAMjB,GAAG,CAACG,mBAAmB,CAACc,KAAD,CAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,mBAAV,GAA+B;AAClC,QAAMrB,UAAU,CACZI,eAAe,CAACkB,oBADJ,EAEZV,gBAFY,CAAhB;AAIH;AAED,OAAO,UAAUW,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAAEC,IAAAA,KAAF;AAAQC,IAAAA;AAAR;AAAT,CAA1B,EAAuD;AAC1D,MAAG;AACC,UAAM;AAAEb,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMX,OAAO,GAAG,MAAMb,IAAI,CAACQ,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CACLK,kBAAkB,CAAC;AACfU,MAAAA,EAAE,EAACF,YAAY,CAACE,EADD;AAEf,SAAGF,YAAY,CAACG,IAAb;AAFY,KAAD,CADb,CAAT;AAMH,GAVD,CAUC,OAAMC,KAAN,EAAY;AACT,UAAMjB,GAAG,CAACI,kBAAkB,CAACa,KAAD,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUQ,kBAAV,GAA8B;AACjC,QAAM5B,UAAU,CACZI,eAAe,CAACkB,oBADJ,EAEZC,eAFY,CAAhB;AAIH;AAGD,OAAO,UAAUM,SAAV,GAAsB;AACzB,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACmB,mBAAD,CAAL,EAA2BnB,IAAI,CAAC0B,kBAAD,CAA/B,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest,all,call, put } from \"redux-saga/effects\";\r\n\r\nimport UserActionTypes from \"./user.types\";\r\nimport { googleSignInSuccess,googleSignInFailure,emailSignInFailure,emailSignInSuccess } from \"./user.action\";\r\n\r\nimport { auth,createUserProfileDocument,googleProvider } from \"../../firebase/firebase.utils\";\r\n\r\nexport function* signInWithGoogle(){\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(\r\n            googleSignInSuccess({\r\n                id:userSnapshot.id,\r\n                ...userSnapshot.data()\r\n            })\r\n        );\r\n    }catch(error){\r\n        yield put(googleSignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(\r\n        UserActionTypes.GOOGLE_SIGN_IN_START,\r\n        signInWithGoogle\r\n        );\r\n}\r\n\r\nexport function* signInWithEmail({payload:{ email,password }}){\r\n    try{\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(\r\n            emailSignInSuccess({\r\n                id:userSnapshot.id,\r\n                ...userSnapshot.data()\r\n            })\r\n        );\r\n    }catch(error){\r\n        yield put(emailSignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(\r\n        UserActionTypes.GOOGLE_SIGN_IN_START,\r\n        signInWithEmail\r\n    );\r\n}\r\n\r\n\r\nexport function* userSagas() {\r\n    yield all([call(onGoogleSignInStart),call(onEmailSignInStart)]);\r\n}"]},"metadata":{},"sourceType":"module"}