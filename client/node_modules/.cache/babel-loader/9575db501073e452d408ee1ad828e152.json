{"ast":null,"code":"var _jsxFileName = \"E:\\\\files\\\\React_works\\\\Crown-clothes\\\\clothes\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from \"react\";\nimport \"./sign-up.styles.scss\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { connect } from \"react-redux\";\nimport { signUpStart } from \"../../redux/user/user.action\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmpassword: \"\"\n  });\n  const {\n    email,\n    displayName,\n    password,\n    confirmpassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmpassword) {\n      alert(\"password's don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"I do not have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    label: \"Display Name\",\n    value: displayName,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    label: \"Email\",\n    value: email,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    label: \"Password\",\n    value: password,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmpassword\",\n    label: \"Confirm Password\",\n    value: confirmpassword,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: creds => dispatch(signUpStart(creds))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["E:/files/React_works/Crown-clothes/clothes/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","signUpStart","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmpassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch","creds"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\r\nimport \"./sign-up.styles.scss\";\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { signUpStart } from \"../../redux/user/user.action\";\r\n\r\n\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n\r\n    const [userCredentials,setUserCredentials] = useState({\r\n        displayName:\"\",\r\n        email:\"\",\r\n        password:\"\",\r\n        confirmpassword:\"\"\r\n    })\r\n\r\n    const {email,displayName,password, confirmpassword} = userCredentials;\r\n\r\n    const handleSubmit = async event =>{\r\n        event.preventDefault();\r\n        if(password !== confirmpassword){\r\n            alert(\"password's don't match\");\r\n            return;\r\n        }\r\n        signUpStart({displayName,email,password});\r\n    };\r\n\r\n    const handleChange = (event) =>{\r\n        const {name, value} = event.target;\r\n        setUserCredentials({...userCredentials,[name]:value});\r\n    };   \r\n\r\n        return (\r\n            <div className='sign-up'>\r\n                <h2 className=\"title\">I do not have a account</h2>\r\n                <span>Sign up with your email and password</span>\r\n                <form className='sign-up-form' onSubmit={handleSubmit}>\r\n                    <FormInput \r\n                        type=\"text\"\r\n                        name=\"displayName\"\r\n                        label=\"Display Name\"\r\n                        value={displayName}\r\n                        onChange={handleChange}\r\n                        required/>\r\n                    <FormInput \r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                        required/>\r\n                    <FormInput \r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        value={password}\r\n                        onChange={handleChange}\r\n                        required/>\r\n                    <FormInput \r\n                        type=\"password\"\r\n                        name=\"confirmpassword\"\r\n                        label=\"Confirm Password\"\r\n                        value={confirmpassword}\r\n                        onChange={handleChange}\r\n                        required/>\r\n                    <CustomButton type=\"submit\">SIGN UP</CustomButton>\r\n                </form>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>({\r\n    signUpStart: (creds) => dispatch(signUpStart(creds))\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}