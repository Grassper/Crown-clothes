{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { fetchCollectionsStart } from \"./shop/shop.sagas\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./root.reducer.js\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middleware.push(logger);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\nsagaMiddleware.run(fetchCollectionsStart);\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["E:/files/React_works/Crown-clothes/clothes/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","createSagaMiddleware","fetchCollectionsStart","logger","rootReducer","sagaMiddleware","middleware","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,qBAAT,QAAsC,mBAAtC;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,MAAMK,UAAU,GAAG,CAACD,cAAD,CAAnB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA2C;AACvCH,EAAAA,UAAU,CAACI,IAAX,CAAgBP,MAAhB;AACH;;AAED,MAAMQ,KAAK,GAAGb,WAAW,CAACM,WAAD,EAAaL,eAAe,CAAC,GAAGO,UAAJ,CAA5B,CAAzB;AAEAD,cAAc,CAACO,GAAf,CAAmBV,qBAAnB;AAEA,MAAMW,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B;AAEA,SAASA,KAAT,EAAeE,SAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { fetchCollectionsStart } from \"./shop/shop.sagas\";\r\n\r\nimport logger from \"redux-logger\";\r\n\r\nimport rootReducer from \"./root.reducer.js\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middleware = [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === \"development\"){\r\n    middleware.push(logger);\r\n}\r\n\r\nconst store = createStore(rootReducer,applyMiddleware(...middleware));\r\n\r\nsagaMiddleware.run(fetchCollectionsStart);\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store,persistor }\r\n"]},"metadata":{},"sourceType":"module"}